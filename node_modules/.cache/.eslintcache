[{"/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/index.tsx":"1","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/reportWebVitals.ts":"2","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/App.tsx":"3","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/Root.tsx":"4","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/translation/Translation.tsx":"5","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/routes/Routes.tsx":"6","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/navigation/Navigation.tsx":"7","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/menu/Taskbar.tsx":"8","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/pages/players/Players.tsx":"9","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/pages/home/Home.tsx":"10","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/pages/points-table/PointsTable.tsx":"11","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/navigation/NavigationItemIcon.tsx":"12","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/pages/matches/Matches.tsx":"13","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/player-card/PlayerCard.tsx":"14","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/player-card/CardList.tsx":"15","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-panel/PropertiesPanel.tsx":"16","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-content/PropertiesContent.tsx":"17","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-registry/PropertiesPanelRegistry.tsx":"18","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-content/PropertiesUnknownContent.tsx":"19","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-registry/Registry.tsx":"20","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-panel/MasonMountDetailsPanel.tsx":"21","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-content/MasonMountPropertiesContent.tsx":"22","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-panel/RomaluLukakuPropertiesPanel.tsx":"23","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-content/RomaluLukakuPropertiesContent.tsx":"24","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/player-card/ExpandableItem.tsx":"25","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/data-table/MatchesTable.tsx":"26"},{"size":544,"mtime":1632680722398,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1632680722400,"results":"29","hashOfConfig":"28"},{"size":784,"mtime":1632680722395,"results":"30","hashOfConfig":"28"},{"size":1642,"mtime":1685564772511,"results":"31","hashOfConfig":"28"},{"size":2204,"mtime":1632680722400,"results":"32","hashOfConfig":"28"},{"size":643,"mtime":1685019726920,"results":"33","hashOfConfig":"28"},{"size":2865,"mtime":1684968842514,"results":"34","hashOfConfig":"28"},{"size":1940,"mtime":1689263661812,"results":"35","hashOfConfig":"28"},{"size":1278,"mtime":1634415127175,"results":"36","hashOfConfig":"28"},{"size":1773,"mtime":1632978693511,"results":"37","hashOfConfig":"28"},{"size":1098,"mtime":1672967898371,"results":"38","hashOfConfig":"28"},{"size":1668,"mtime":1684623906066,"results":"39","hashOfConfig":"28"},{"size":1276,"mtime":1684625683138,"results":"40","hashOfConfig":"28"},{"size":8232,"mtime":1655514777774,"results":"41","hashOfConfig":"28"},{"size":3794,"mtime":1655514853991,"results":"42","hashOfConfig":"28"},{"size":3312,"mtime":1655006131042,"results":"43","hashOfConfig":"28"},{"size":858,"mtime":1633809391576,"results":"44","hashOfConfig":"28"},{"size":569,"mtime":1634435805727,"results":"45","hashOfConfig":"28"},{"size":1142,"mtime":1634419680059,"results":"46","hashOfConfig":"28"},{"size":375,"mtime":1633805547766,"results":"47","hashOfConfig":"28"},{"size":3082,"mtime":1634689001247,"results":"48","hashOfConfig":"28"},{"size":1180,"mtime":1634687786913,"results":"49","hashOfConfig":"28"},{"size":3150,"mtime":1634689340312,"results":"50","hashOfConfig":"28"},{"size":1173,"mtime":1634689191340,"results":"51","hashOfConfig":"28"},{"size":482,"mtime":1637636752211,"results":"52","hashOfConfig":"28"},{"size":4355,"mtime":1684624646366,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1044k3a",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"56"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"56"},"/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/index.tsx",[],[],"/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/reportWebVitals.ts",["123"],"import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/App.tsx",["124"],"import React from \"react\";\nimport Home from \"./components/Root\";\nimport \"./App.css\";\nimport { IntlProvider } from \"react-intl\";\nimport { getLocale, getMessages } from \"./translation/Translation\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Routes from \"./components/routes/Routes\";\nconst locale = getLocale();\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface AppProps {}\n\nconst App: React.FC<AppProps> = () => {\n  return (\n    <IntlProvider locale={locale} messages={getMessages(locale)}>\n      <Home />\n      <Switch>\n        {Routes.map((route: any) => (\n          <Route exact path={route.path} key={route.path}>\n            <route.component />\n          </Route>\n        ))}\n      </Switch>\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/Root.tsx",[],"/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/translation/Translation.tsx",[],"/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/routes/Routes.tsx",[],"/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/navigation/Navigation.tsx",["125","126"],"/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/menu/Taskbar.tsx",["127"],"/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/pages/players/Players.tsx",["128","129"],"import { IntlShape, injectIntl } from \"react-intl\";\nimport React, { Component } from \"react\";\nimport { WithStyles, createStyles, withStyles } from \"@material-ui/core/styles\";\nimport PlayerCard from \"../../components/player-card/PlayerCard\";\nimport { Paper, Typography } from \"@mui/material\";\n\nconst styles = () =>\n  createStyles({\n    content: {\n      flexGrow: 1,\n      width: \"100%\",\n    },\n    header: {\n      position: \"relative\",\n      left: 32,\n    },\n  });\ninterface PlayersProps extends WithStyles<typeof styles> {\n  intl: IntlShape;\n  userId: string;\n  model?: any;\n}\n\ntype PlayersState = {\n  openPasswordDialog: boolean;\n};\n\nclass Players extends Component<PlayersProps, PlayersState> {\n  state: PlayersState;\n\n  constructor(props: PlayersProps) {\n    super(props);\n    this.state = {\n      openPasswordDialog: false,\n    };\n  }\n\n  render() {\n    const { classes, intl, model } = this.props;\n    return (\n      <div className={classes.content}>\n        <div className={classes.header}>\n          <Typography variant=\"h5\" component=\"div\" gutterBottom>\n            {intl.formatMessage({ id: \"header.players\" })}\n          </Typography>\n        </div>\n        <PlayerCard model={model} />\n      </div>\n    );\n  }\n}\nexport default injectIntl(withStyles(styles)(Players));\n","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/pages/home/Home.tsx",[],"/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/pages/points-table/PointsTable.tsx",["130"],"import { IntlShape, injectIntl } from \"react-intl\";\nimport React, { Component } from \"react\";\nimport { WithStyles, createStyles, withStyles } from \"@material-ui/core/styles\";\nimport { IconButton, Typography } from \"@material-ui/core\";\n\nconst styles = () =>\n  createStyles({\n    content: {\n      flexGrow: 1,\n      width: \"100%\",\n    },\n  });\ninterface PointsTableProps extends WithStyles<typeof styles> {\n  intl: IntlShape;\n  userId: string;\n}\n\ntype PointsTableState = {\n  openPasswordDialog: boolean;\n};\n\nclass PointsTable extends Component<PointsTableProps, PointsTableState> {\n  state: PointsTableState;\n\n  constructor(props: PointsTableProps) {\n    super(props);\n    this.state = {\n      openPasswordDialog: false,\n    };\n  }\n\n  render() {\n    const { classes, intl } = this.props;\n    return (\n      <div className={classes.content}>\n        <div>\n          <Typography variant=\"h4\">\n            {intl.formatMessage({ id: \"points.table.header\" })}\n          </Typography>\n        </div>\n        <div></div>\n      </div>\n    );\n  }\n}\nexport default injectIntl(withStyles(styles)(PointsTable));\n","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/navigation/NavigationItemIcon.tsx",["131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],"import {\n  mdiClipboardListOutline,\n  mdiDatabase,\n  mdiFormatListCheckbox,\n  mdiMonitor,\n  mdiNewspaperVariantMultipleOutline,\n  mdiServer,\n  mdiSitemap,\n  mdiTable,\n  mdiTableColumn,\n  mdiTextBoxMultipleOutline,\n  mdiTextBoxOutline,\n} from \"@mdi/js\";\n\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport InsertChartIcon from \"@material-ui/icons/InsertChart\";\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\nimport React from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport WidgetsIcon from \"@material-ui/icons/Widgets\";\nimport TableViewIcon from \"@material-ui/icons/TableChart\";\nimport PlayersIcon from \"@material-ui/icons/Person\";\nimport MatchesIcon from \"@material-ui/icons/Timeline\";\n\ninterface NavigationItemIconProps {\n  name: any;\n  depth: number;\n}\nconst NavigationItemIcon: React.FC<NavigationItemIconProps> = (\n  props: NavigationItemIconProps\n) => {\n  const { name, depth } = props;\n  const maxHeight = 24 - depth * 2;\n  switch (name) {\n    case \"home\":\n      return <HomeIcon style={{ maxHeight: maxHeight, color: \"#fff\" }} />;\n    case \"players\":\n      return <PlayersIcon style={{ maxHeight: maxHeight, color: \"#fff\" }} />;\n    case \"pointstable\":\n      return <TableViewIcon style={{ maxHeight: maxHeight, color: \"#fff\" }} />;\n    case \"matches\":\n      return <MatchesIcon style={{ maxHeight: maxHeight, color: \"#fff\" }} />;\n    default:\n      return <WidgetsIcon style={{ maxHeight: maxHeight, color: \"#fff\" }} />;\n  }\n};\nexport default NavigationItemIcon;\n","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/pages/matches/Matches.tsx",[],"/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/player-card/PlayerCard.tsx",["149","150","151","152","153","154","155","156","157","158","159"],"import { IntlShape, injectIntl } from \"react-intl\";\nimport React, { Component, useState } from \"react\";\nimport {\n  Theme,\n  WithStyles,\n  createStyles,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport {\n  Avatar,\n  CardContent,\n  CardHeader,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport NumbersIcon from \"@mui/icons-material/LooksOne\";\nimport Card from \"@mui/material/Card\";\nimport ExpandableItem from \"./ExpandableItem\";\nimport CardList from \"./CardList\";\nimport { red, blue } from \"@material-ui/core/colors\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport FlagIcon from \"@mui/icons-material/Flag\";\nimport {\n  CardActions,\n  IconButton,\n  CardMedia,\n  Collapse,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  List,\n  ListItemAvatar,\n  Drawer,\n  Toolbar,\n} from \"@mui/material\";\n\nconst avatarBgColor = red[500];\nconst avatarJersyNoBgColor = blue[600];\nconst drawerWidth = \"360px\";\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      width: \"100%\",\n      height: \"80%\",\n      position: \"absolute\",\n      overflowY: \"auto\",\n    },\n    drawer: {\n      width: drawerWidth,\n      height: \"100%\",\n    },\n    drawerInline: {\n      height: \"100%\",\n    },\n    drawerPaper: {\n      position: \"relative\",\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      width: drawerWidth,\n    },\n    drawerPaperClose: {\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: 0,\n    },\n    header: {\n      float: \"left\",\n      margin: 5,\n    },\n    innerContainer: {\n      height: \"80%\",\n      top: 15,\n      marginLeft: 20,\n      position: \"relative\",\n    },\n    card: {\n      minHeight: 100,\n      display: \"inline-grid\",\n      marginLeft: 10,\n      marginRight: 10,\n      marginBottom: 15,\n    },\n    cardActions: {\n      float: \"right\",\n    },\n    infoButton: {\n      position: \"relative\",\n      bottom: 60,\n      left: 389,\n      width: 0,\n    },\n  });\n\nconst toolbarStyles = () =>\n  createStyles({\n    root: {\n      paddingLeft: \"12px\",\n      paddingRight: \"0px\",\n    },\n  });\n\nconst ToolbarWithAdjustedGutters = withStyles(toolbarStyles)(Toolbar);\n\ninterface PlayerCardProps extends WithStyles<typeof styles> {\n  intl: IntlShape;\n  model: any;\n  inline?: boolean;\n}\n\ntype PlayerCardState = {\n  propertiesModel: any;\n  open: boolean;\n};\n\nclass PlayerCard extends Component<PlayerCardProps, PlayerCardState> {\n  state: PlayerCardState;\n\n  constructor(props: PlayerCardProps) {\n    super(props);\n    this.state = { open: false, propertiesModel: this.props.model };\n  }\n\n  onPropertiesPanelClose() {\n    this.setState((prevState) => ({\n      open: !prevState.open,\n    }));\n  }\n\n  onPropertiesPanelLulakuClose() {\n    this.setState((prevState) => ({\n      open: !prevState.open,\n    }));\n  }\n\n  onHandleExpanded = () => {\n    this.setState((prevState) => ({\n      open: !prevState.open,\n    }));\n  };\n\n  onHandleExpandedTest = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  render() {\n    const { classes, intl, model, inline } = this.props;\n    const { open, propertiesModel } = this.state;\n\n    const drawerClasses: any = {};\n\n    if (inline) {\n      drawerClasses.paper = `${classes.drawerPaper} ${\n        open ? null : classes.drawerPaperClose\n      }`;\n    }\n    return (\n      <div className={classes.content}>\n        <div className={classes.innerContainer}>\n          {CardList.map((prop, key) => {\n            return (\n              <>\n                <Card\n                  sx={{ width: 425 }}\n                  className={classes.card}\n                  key={prop.id}\n                >\n                  <CardHeader\n                    avatar={\n                      <Avatar\n                        variant=\"circle\"\n                        style={{ backgroundColor: avatarBgColor }}\n                      >\n                        {prop.playerInitial}\n                      </Avatar>\n                    }\n                    title={prop.playerName}\n                    action={\n                      <Avatar\n                        variant=\"circle\"\n                        style={{ backgroundColor: avatarJersyNoBgColor }}\n                      >\n                        {prop.jerseyNumber}\n                      </Avatar>\n                    }\n                  />\n                  <CardMedia\n                    component=\"img\"\n                    sx={{ height: \"412px\" }}\n                    image={prop.playerImage}\n                  />\n                  <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {intl.formatMessage({ id: prop.playerPosition })}\n                    </Typography>\n                  </CardContent>\n                  <CardActions\n                    key={prop.id}\n                    className={classes.cardActions}\n                  ></CardActions>\n\n                  <ExpandableItem\n                    render={(props) => (\n                      <>\n                        <IconButton\n                          className={classes.infoButton}\n                          onClick={() => props.setOpen(!props.open)}\n                        >\n                          <InfoIcon />\n                        </IconButton>\n                        <Collapse in={props.open} timeout=\"auto\" unmountOnExit>\n                          <CardContent>\n                            <List\n                              sx={{\n                                width: \"100%\",\n                                maxWidth: 360,\n                                bgcolor: \"background.paper\",\n                                display: \"flex\",\n                              }}\n                            >\n                              <ListItem>\n                                <ListItemAvatar>\n                                  <Avatar>\n                                    <NumbersIcon />\n                                  </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                  primary=\"Age\"\n                                  secondary={prop.playerAge}\n                                />\n                              </ListItem>\n                              <ListItem>\n                                <ListItemAvatar>\n                                  <Avatar>\n                                    <FlagIcon />\n                                  </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                  primary=\"Nationality\"\n                                  secondary={prop.nationality}\n                                />\n                              </ListItem>\n                            </List>\n                          </CardContent>\n                        </Collapse>\n                      </>\n                    )}\n                  />\n                  {/* <Drawer\n                      anchor=\"right\"\n                      className={\n                        !inline ? classes.drawer : classes.drawerInline\n                      }\n                      classes={drawerClasses}\n                      variant={inline ? \"permanent\" : \"temporary\"}\n                      onClose={this.onHandleExpanded}\n                      open={open}\n                    >\n                      <div className={classes.drawer}>\n                        <ToolbarWithAdjustedGutters>\n                          <IconButton onClick={this.onHandleExpanded}>\n                            <ChevronRightIcon />\n                          </IconButton>\n                          <Typography variant=\"h6\" noWrap>\n                            {prop.playerName}\n                          </Typography>\n                        </ToolbarWithAdjustedGutters>\n                      </div>\n                    </Drawer> */}\n                </Card>\n              </>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default injectIntl(withStyles(styles)(PlayerCard));\n","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/player-card/CardList.tsx",[],"/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-panel/PropertiesPanel.tsx",["160","161","162","163","164","165"],"/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-content/PropertiesContent.tsx",["166"],"import { IntlShape, injectIntl } from \"react-intl\";\nimport React, { Component } from \"react\";\n\nimport PropertiesPanelRegistry from \"../properties-registry/PropertiesPanelRegistry\";\n\ninterface PropertiesContentProps {\n  intl: IntlShape;\n  type: string;\n  model: any;\n}\n\ntype PropertiesContentState = {\n  open: boolean;\n};\n\nclass PropertiesContent extends Component<\n  PropertiesContentProps,\n  PropertiesContentState\n> {\n  state: PropertiesContentState;\n  constructor(props: PropertiesContentProps) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n  }\n\n  render() {\n    const { model, type } = this.props;\n    const PropertyComponent =\n      PropertiesPanelRegistry.getComponent(type).content;\n    return (\n      <React.Fragment>{<PropertyComponent model={model} />}</React.Fragment>\n    );\n  }\n}\nexport default injectIntl(PropertiesContent);\n",[],"/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-registry/PropertiesPanelRegistry.tsx",[],"/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-content/PropertiesUnknownContent.tsx",["167","168","169","170","171"],"import { IntlShape, injectIntl } from \"react-intl\";\nimport React, { Component } from \"react\";\nimport {\n  Theme,\n  WithStyles,\n  createStyles,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport CardList from \"../player-card/CardList\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"0 24px 24px 24px\",\n      margin: theme.spacing(1),\n    },\n    textField: {\n      minWidth: \"275px\",\n    },\n    inputLabel: {\n      fontSize: \"80%\",\n    },\n    dataTable: {\n      width: \"275px\",\n      marginTop: \"5px\",\n    },\n  });\n\ninterface PropertiesUnknownContentProps extends WithStyles<typeof styles> {\n  intl: IntlShape;\n  model: any;\n}\n\nclass PropertiesUnknownContent extends Component<PropertiesUnknownContentProps> {\n  render() {\n    const { classes, intl, model } = this.props;\n    const name = model ? model.playerName === \"Romalu Lukaku\" : \"\";\n    const readOnly = true;\n    return (\n      <React.Fragment>\n        <div className={classes.root}>\n          <h1>{model[0].playerName}</h1>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default injectIntl(withStyles(styles)(PropertiesUnknownContent));\n","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-registry/Registry.tsx",["172","173","174","175"],"import { get } from \"lodash\";\n\nclass Registry {\n  registry: any;\n  constructor(registry: any = {}) {\n    this.registry = registry;\n  }\n\n  getDefaultComponent(): any {\n    return get(this.registry.components, \"unknown\", null);\n  }\n\n  getComponent(type: string): any {\n    return get(this.registry.components, type, this.getDefaultComponent());\n  }\n}\n\nexport default Registry;\n","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-panel/MasonMountDetailsPanel.tsx",["176","177"],"import { IconButton, Toolbar, Typography } from \"@material-ui/core\";\nimport { IntlShape, injectIntl } from \"react-intl\";\nimport React, { Component } from \"react\";\nimport {\n  Theme,\n  WithStyles,\n  createStyles,\n  withStyles,\n} from \"@material-ui/core/styles\";\n\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport MasonMountPropertiesContent from \"../properties-content/MasonMountPropertiesContent\";\n\nconst drawerWidth = \"360px\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      overflow: \"hidden\",\n    },\n    drawer: {\n      width: drawerWidth,\n      height: \"100%\",\n    },\n    drawerInline: {\n      height: \"100%\",\n    },\n    drawerPaper: {\n      position: \"relative\",\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      width: drawerWidth,\n    },\n    drawerPaperClose: {\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: 0,\n    },\n  });\n\nconst toolbarStyles = () =>\n  createStyles({\n    root: {\n      paddingLeft: \"12px\",\n      paddingRight: \"0px\",\n    },\n  });\n\nconst ToolbarWithAdjustedGutters = withStyles(toolbarStyles)(Toolbar);\n\ninterface PropertiesPanelProps extends WithStyles<typeof styles> {\n  intl: IntlShape;\n  open: boolean;\n  model: any;\n  inline?: boolean;\n  onPropertiesOpenStatusChange?: () => void;\n}\n\nclass PropertiesPanel extends Component<PropertiesPanelProps> {\n  constructor(props: PropertiesPanelProps) {\n    super(props);\n    this.onHandleDrawerClose = this.onHandleDrawerClose.bind(this);\n  }\n\n  onHandleDrawerClose() {\n    const { onPropertiesOpenStatusChange } = this.props;\n    if (onPropertiesOpenStatusChange) {\n      onPropertiesOpenStatusChange();\n    }\n  }\n\n  render() {\n    const { intl, classes, open, model, inline } = this.props;\n    const drawerClasses: any = {};\n\n    if (inline) {\n      drawerClasses.paper = `${classes.drawerPaper} ${\n        open ? null : classes.drawerPaperClose\n      }`;\n    }\n\n    return (\n      <Drawer\n        anchor=\"right\"\n        className={!inline ? classes.drawer : classes.drawerInline}\n        classes={drawerClasses}\n        variant={inline ? \"permanent\" : \"temporary\"}\n        onClose={this.onHandleDrawerClose}\n        open={open}\n      >\n        <div className={classes.drawer}>\n          <ToolbarWithAdjustedGutters>\n            <IconButton onClick={this.onHandleDrawerClose}>\n              <ChevronRightIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              {intl.formatMessage({\n                id: \"properties.panel.heading.masonmount\",\n              })}\n            </Typography>\n          </ToolbarWithAdjustedGutters>\n          <MasonMountPropertiesContent model={model} />\n        </div>\n      </Drawer>\n    );\n  }\n}\n\nexport default injectIntl(withStyles(styles)(PropertiesPanel));\n","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-content/MasonMountPropertiesContent.tsx",["178","179","180","181"],"import { IntlShape, injectIntl } from \"react-intl\";\nimport React, { Component } from \"react\";\nimport {\n  Theme,\n  WithStyles,\n  createStyles,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport CardList from \"../player-card/CardList\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"0 24px 24px 24px\",\n      margin: theme.spacing(1),\n    },\n    textField: {\n      minWidth: \"275px\",\n    },\n    inputLabel: {\n      fontSize: \"80%\",\n    },\n    dataTable: {\n      width: \"275px\",\n      marginTop: \"5px\",\n    },\n  });\n\ninterface PropertiesUnknownContentProps extends WithStyles<typeof styles> {\n  intl: IntlShape;\n  model: any;\n}\n\nclass PropertiesUnknownContent extends Component<PropertiesUnknownContentProps> {\n  render() {\n    const { classes, intl, model } = this.props;\n    const findName = CardList.filter((element) => element.id == 2).map(\n      (element) => element.playerName\n    );\n    const readOnly = true;\n    return (\n      <React.Fragment>\n        <div className={classes.root}>\n          <h1>{findName}</h1>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default injectIntl(withStyles(styles)(PropertiesUnknownContent));\n","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-panel/RomaluLukakuPropertiesPanel.tsx",["182","183"],"import { IconButton, Toolbar, Typography } from \"@material-ui/core\";\nimport { IntlShape, injectIntl } from \"react-intl\";\nimport React, { Component } from \"react\";\nimport {\n  Theme,\n  WithStyles,\n  createStyles,\n  withStyles,\n} from \"@material-ui/core/styles\";\n\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport RomaluLukakuPropertiesContent from \"../properties-content/RomaluLukakuPropertiesContent\";\n\nconst drawerWidth = \"360px\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      overflow: \"hidden\",\n    },\n    drawer: {\n      width: drawerWidth,\n      height: \"100%\",\n    },\n    drawerInline: {\n      height: \"100%\",\n    },\n    drawerPaper: {\n      position: \"relative\",\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      width: drawerWidth,\n    },\n    drawerPaperClose: {\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: 0,\n    },\n  });\n\nconst toolbarStyles = () =>\n  createStyles({\n    root: {\n      paddingLeft: \"12px\",\n      paddingRight: \"0px\",\n    },\n  });\n\nconst ToolbarWithAdjustedGutters = withStyles(toolbarStyles)(Toolbar);\n\ninterface RomaluLukakuPropertiesPanelProps extends WithStyles<typeof styles> {\n  intl: IntlShape;\n  open: boolean;\n  model: any;\n  inline?: boolean;\n  onPropertiesOpenStatusChange?: () => void;\n}\n\nclass RomaluLukakuPropertiesPanel extends Component<RomaluLukakuPropertiesPanelProps> {\n  constructor(props: RomaluLukakuPropertiesPanelProps) {\n    super(props);\n    this.onHandleDrawerClose = this.onHandleDrawerClose.bind(this);\n  }\n\n  onHandleDrawerClose() {\n    const { onPropertiesOpenStatusChange } = this.props;\n    if (onPropertiesOpenStatusChange) {\n      onPropertiesOpenStatusChange();\n    }\n  }\n\n  render() {\n    const { intl, classes, open, model, inline } = this.props;\n    const drawerClasses: any = {};\n\n    if (inline) {\n      drawerClasses.paper = `${classes.drawerPaper} ${\n        open ? null : classes.drawerPaperClose\n      }`;\n    }\n\n    return (\n      <Drawer\n        anchor=\"right\"\n        className={!inline ? classes.drawer : classes.drawerInline}\n        classes={drawerClasses}\n        variant={inline ? \"permanent\" : \"temporary\"}\n        onClose={this.onHandleDrawerClose}\n        open={open}\n      >\n        <div className={classes.drawer}>\n          <ToolbarWithAdjustedGutters>\n            <IconButton onClick={this.onHandleDrawerClose}>\n              <ChevronRightIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              {intl.formatMessage({\n                id: \"properties.panel.heading.romaluLukaku\",\n              })}\n            </Typography>\n          </ToolbarWithAdjustedGutters>\n          <RomaluLukakuPropertiesContent model={model} />\n        </div>\n      </Drawer>\n    );\n  }\n}\n\nexport default injectIntl(withStyles(styles)(RomaluLukakuPropertiesPanel));\n","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/properties-content/RomaluLukakuPropertiesContent.tsx",["184","185","186"],"import { IntlShape, injectIntl } from \"react-intl\";\nimport React, { Component } from \"react\";\nimport {\n  Theme,\n  WithStyles,\n  createStyles,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport CardList from \"../player-card/CardList\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: \"0 24px 24px 24px\",\n      margin: theme.spacing(1),\n    },\n    textField: {\n      minWidth: \"275px\",\n    },\n    inputLabel: {\n      fontSize: \"80%\",\n    },\n    dataTable: {\n      width: \"275px\",\n      marginTop: \"5px\",\n    },\n  });\n\ninterface PropertiesUnknownContentProps extends WithStyles<typeof styles> {\n  intl: IntlShape;\n  model: any;\n}\n\nclass PropertiesUnknownContent extends Component<PropertiesUnknownContentProps> {\n  render() {\n    const { classes, intl } = this.props;\n    const findName = CardList.filter((element) => element.id == 1).map(\n      (element) => element.playerName\n    );\n    const readOnly = true;\n    return (\n      <React.Fragment>\n        <div className={classes.root}>\n          <h1>{findName}</h1>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default injectIntl(withStyles(styles)(PropertiesUnknownContent));\n","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/player-card/ExpandableItem.tsx",["187"],"import { Dispatch, SetStateAction, useState } from \"react\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst ExpandableItem = (props: {\n  render: (arg0: {\n    open: boolean;\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    setOpen: Dispatch<SetStateAction<boolean>>;\n  }) => any;\n}) => {\n  const [open, setOpen] = useState(false);\n\n  return props.render({ open, setOpen });\n};\n\nexport default ExpandableItem;\n","/Users/souravchatterjee/Documents/GitHub/english-premier-league-chelsea/src/components/data-table/MatchesTable.tsx",["188"],"import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\n\ninterface Column {\n  id: \"name\" | \"code\" | \"population\" | \"size\" | \"density\";\n  label: string;\n  minWidth?: number;\n  align?: \"right\";\n  format?: (value: number) => string;\n}\n\nconst columns: readonly Column[] = [\n  { id: \"name\", label: \"Name\", minWidth: 170 },\n  { id: \"code\", label: \"ISO\\u00a0Code\", minWidth: 100 },\n  {\n    id: \"population\",\n    label: \"Population\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value: number) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"size\",\n    label: \"Size\\u00a0(km\\u00b2)\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value: number) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"density\",\n    label: \"Density\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value: number) => value.toFixed(2),\n  },\n];\n\ninterface Data {\n  name: string;\n  code: string;\n  population: number;\n  size: number;\n  density: number;\n}\n\nfunction createData(\n  name: string,\n  code: string,\n  population: number,\n  size: number\n): Data {\n  const density = population / size;\n  return { name, code, population, size, density };\n}\n\nconst rows = [\n  createData(\"India\", \"IN\", 1324171354, 3287263),\n  createData(\"China\", \"CN\", 1403500365, 9596961),\n  createData(\"Italy\", \"IT\", 60483973, 301340),\n  createData(\"United States\", \"US\", 327167434, 9833520),\n  createData(\"Canada\", \"CA\", 37602103, 9984670),\n  createData(\"Australia\", \"AU\", 25475400, 7692024),\n  createData(\"Germany\", \"DE\", 83019200, 357578),\n  createData(\"Ireland\", \"IE\", 4857000, 70273),\n  createData(\"Mexico\", \"MX\", 126577691, 1972550),\n  createData(\"Japan\", \"JP\", 126317000, 377973),\n  createData(\"France\", \"FR\", 67022000, 640679),\n  createData(\"United Kingdom\", \"GB\", 67545757, 242495),\n  createData(\"Russia\", \"RU\", 146793744, 17098246),\n  createData(\"Nigeria\", \"NG\", 200962417, 923768),\n  createData(\"Brazil\", \"BR\", 210147125, 8515767),\n];\n\nexport default function MatchesTable() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n",{"ruleId":"189","severity":1,"message":"190","line":3,"column":25,"nodeType":"191","messageId":"192","endLine":3,"endColumn":57},{"ruleId":"193","severity":1,"message":"194","line":17,"column":29,"nodeType":"195","messageId":"196","endLine":17,"endColumn":32,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":65,"column":11,"nodeType":"200","messageId":"201","endLine":65,"endColumn":22},{"ruleId":"193","severity":1,"message":"194","line":65,"column":37,"nodeType":"195","messageId":"196","endLine":65,"endColumn":40,"suggestions":"202"},{"ruleId":"198","severity":1,"message":"203","line":11,"column":3,"nodeType":"200","messageId":"201","endLine":11,"endColumn":9},{"ruleId":"198","severity":1,"message":"204","line":5,"column":10,"nodeType":"200","messageId":"201","endLine":5,"endColumn":15},{"ruleId":"193","severity":1,"message":"194","line":21,"column":11,"nodeType":"195","messageId":"196","endLine":21,"endColumn":14,"suggestions":"205"},{"ruleId":"198","severity":1,"message":"206","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":20},{"ruleId":"198","severity":1,"message":"207","line":2,"column":3,"nodeType":"200","messageId":"201","endLine":2,"endColumn":26},{"ruleId":"198","severity":1,"message":"208","line":3,"column":3,"nodeType":"200","messageId":"201","endLine":3,"endColumn":14},{"ruleId":"198","severity":1,"message":"209","line":4,"column":3,"nodeType":"200","messageId":"201","endLine":4,"endColumn":24},{"ruleId":"198","severity":1,"message":"210","line":5,"column":3,"nodeType":"200","messageId":"201","endLine":5,"endColumn":13},{"ruleId":"198","severity":1,"message":"211","line":6,"column":3,"nodeType":"200","messageId":"201","endLine":6,"endColumn":37},{"ruleId":"198","severity":1,"message":"212","line":7,"column":3,"nodeType":"200","messageId":"201","endLine":7,"endColumn":12},{"ruleId":"198","severity":1,"message":"213","line":8,"column":3,"nodeType":"200","messageId":"201","endLine":8,"endColumn":13},{"ruleId":"198","severity":1,"message":"214","line":9,"column":3,"nodeType":"200","messageId":"201","endLine":9,"endColumn":11},{"ruleId":"198","severity":1,"message":"215","line":10,"column":3,"nodeType":"200","messageId":"201","endLine":10,"endColumn":17},{"ruleId":"198","severity":1,"message":"216","line":11,"column":3,"nodeType":"200","messageId":"201","endLine":11,"endColumn":28},{"ruleId":"198","severity":1,"message":"217","line":12,"column":3,"nodeType":"200","messageId":"201","endLine":12,"endColumn":20},{"ruleId":"198","severity":1,"message":"218","line":15,"column":8,"nodeType":"200","messageId":"201","endLine":15,"endColumn":21},{"ruleId":"198","severity":1,"message":"219","line":17,"column":8,"nodeType":"200","messageId":"201","endLine":17,"endColumn":23},{"ruleId":"198","severity":1,"message":"220","line":18,"column":8,"nodeType":"200","messageId":"201","endLine":18,"endColumn":20},{"ruleId":"198","severity":1,"message":"221","line":20,"column":8,"nodeType":"200","messageId":"201","endLine":20,"endColumn":18},{"ruleId":"198","severity":1,"message":"222","line":21,"column":8,"nodeType":"200","messageId":"201","endLine":21,"endColumn":15},{"ruleId":"198","severity":1,"message":"223","line":22,"column":8,"nodeType":"200","messageId":"201","endLine":22,"endColumn":20},{"ruleId":"193","severity":1,"message":"194","line":29,"column":9,"nodeType":"195","messageId":"196","endLine":29,"endColumn":12,"suggestions":"224"},{"ruleId":"198","severity":1,"message":"225","line":2,"column":28,"nodeType":"200","messageId":"201","endLine":2,"endColumn":36},{"ruleId":"198","severity":1,"message":"226","line":13,"column":3,"nodeType":"200","messageId":"201","endLine":13,"endColumn":10},{"ruleId":"198","severity":1,"message":"227","line":29,"column":3,"nodeType":"200","messageId":"201","endLine":29,"endColumn":15},{"ruleId":"198","severity":1,"message":"228","line":33,"column":3,"nodeType":"200","messageId":"201","endLine":33,"endColumn":9},{"ruleId":"198","severity":1,"message":"229","line":107,"column":7,"nodeType":"200","messageId":"201","endLine":107,"endColumn":33},{"ruleId":"193","severity":1,"message":"194","line":111,"column":10,"nodeType":"195","messageId":"196","endLine":111,"endColumn":13,"suggestions":"230"},{"ruleId":"193","severity":1,"message":"194","line":116,"column":20,"nodeType":"195","messageId":"196","endLine":116,"endColumn":23,"suggestions":"231"},{"ruleId":"198","severity":1,"message":"232","line":153,"column":28,"nodeType":"200","messageId":"201","endLine":153,"endColumn":33},{"ruleId":"198","severity":1,"message":"233","line":154,"column":19,"nodeType":"200","messageId":"201","endLine":154,"endColumn":34},{"ruleId":"193","severity":1,"message":"194","line":156,"column":26,"nodeType":"195","messageId":"196","endLine":156,"endColumn":29,"suggestions":"234"},{"ruleId":"198","severity":1,"message":"235","line":166,"column":32,"nodeType":"200","messageId":"201","endLine":166,"endColumn":35},{"ruleId":"198","severity":1,"message":"236","line":14,"column":8,"nodeType":"200","messageId":"201","endLine":14,"endColumn":35},{"ruleId":"198","severity":1,"message":"237","line":15,"column":8,"nodeType":"200","messageId":"201","endLine":15,"endColumn":35},{"ruleId":"198","severity":1,"message":"238","line":16,"column":8,"nodeType":"200","messageId":"201","endLine":16,"endColumn":37},{"ruleId":"193","severity":1,"message":"194","line":63,"column":10,"nodeType":"195","messageId":"196","endLine":63,"endColumn":13,"suggestions":"239"},{"ruleId":"193","severity":1,"message":"194","line":64,"column":9,"nodeType":"195","messageId":"196","endLine":64,"endColumn":12,"suggestions":"240"},{"ruleId":"193","severity":1,"message":"194","line":84,"column":26,"nodeType":"195","messageId":"196","endLine":84,"endColumn":29,"suggestions":"241"},{"ruleId":"193","severity":1,"message":"194","line":9,"column":10,"nodeType":"195","messageId":"196","endLine":9,"endColumn":13,"suggestions":"242"},{"ruleId":"198","severity":1,"message":"243","line":9,"column":8,"nodeType":"200","messageId":"201","endLine":9,"endColumn":16},{"ruleId":"193","severity":1,"message":"194","line":31,"column":10,"nodeType":"195","messageId":"196","endLine":31,"endColumn":13,"suggestions":"244"},{"ruleId":"198","severity":1,"message":"245","line":36,"column":22,"nodeType":"200","messageId":"201","endLine":36,"endColumn":26},{"ruleId":"198","severity":1,"message":"246","line":37,"column":11,"nodeType":"200","messageId":"201","endLine":37,"endColumn":15},{"ruleId":"198","severity":1,"message":"247","line":38,"column":11,"nodeType":"200","messageId":"201","endLine":38,"endColumn":19},{"ruleId":"193","severity":1,"message":"194","line":4,"column":13,"nodeType":"195","messageId":"196","endLine":4,"endColumn":16,"suggestions":"248"},{"ruleId":"193","severity":1,"message":"194","line":5,"column":25,"nodeType":"195","messageId":"196","endLine":5,"endColumn":28,"suggestions":"249"},{"ruleId":"193","severity":1,"message":"194","line":9,"column":26,"nodeType":"195","messageId":"196","endLine":9,"endColumn":29,"suggestions":"250"},{"ruleId":"193","severity":1,"message":"194","line":13,"column":31,"nodeType":"195","messageId":"196","endLine":13,"endColumn":34,"suggestions":"251"},{"ruleId":"193","severity":1,"message":"194","line":60,"column":10,"nodeType":"195","messageId":"196","endLine":60,"endColumn":13,"suggestions":"252"},{"ruleId":"193","severity":1,"message":"194","line":80,"column":26,"nodeType":"195","messageId":"196","endLine":80,"endColumn":29,"suggestions":"253"},{"ruleId":"193","severity":1,"message":"194","line":31,"column":10,"nodeType":"195","messageId":"196","endLine":31,"endColumn":13,"suggestions":"254"},{"ruleId":"198","severity":1,"message":"245","line":36,"column":22,"nodeType":"200","messageId":"201","endLine":36,"endColumn":26},{"ruleId":"198","severity":1,"message":"232","line":36,"column":28,"nodeType":"200","messageId":"201","endLine":36,"endColumn":33},{"ruleId":"198","severity":1,"message":"247","line":40,"column":11,"nodeType":"200","messageId":"201","endLine":40,"endColumn":19},{"ruleId":"193","severity":1,"message":"194","line":60,"column":10,"nodeType":"195","messageId":"196","endLine":60,"endColumn":13,"suggestions":"255"},{"ruleId":"193","severity":1,"message":"194","line":80,"column":26,"nodeType":"195","messageId":"196","endLine":80,"endColumn":29,"suggestions":"256"},{"ruleId":"193","severity":1,"message":"194","line":31,"column":10,"nodeType":"195","messageId":"196","endLine":31,"endColumn":13,"suggestions":"257"},{"ruleId":"198","severity":1,"message":"245","line":36,"column":22,"nodeType":"200","messageId":"201","endLine":36,"endColumn":26},{"ruleId":"198","severity":1,"message":"247","line":40,"column":11,"nodeType":"200","messageId":"201","endLine":40,"endColumn":19},{"ruleId":"193","severity":1,"message":"194","line":9,"column":9,"nodeType":"195","messageId":"196","endLine":9,"endColumn":12,"suggestions":"258"},{"ruleId":"189","severity":1,"message":"190","line":81,"column":16,"nodeType":"259","messageId":"192","endLine":81,"endColumn":39},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["260","261"],"@typescript-eslint/no-unused-vars","'activeRoute' is assigned a value but never used.","Identifier","unusedVar",["262","263"],"'Avatar' is defined but never used.","'Paper' is defined but never used.",["264","265"],"'IconButton' is defined but never used.","'mdiClipboardListOutline' is defined but never used.","'mdiDatabase' is defined but never used.","'mdiFormatListCheckbox' is defined but never used.","'mdiMonitor' is defined but never used.","'mdiNewspaperVariantMultipleOutline' is defined but never used.","'mdiServer' is defined but never used.","'mdiSitemap' is defined but never used.","'mdiTable' is defined but never used.","'mdiTableColumn' is defined but never used.","'mdiTextBoxMultipleOutline' is defined but never used.","'mdiTextBoxOutline' is defined but never used.","'DashboardIcon' is defined but never used.","'InsertChartIcon' is defined but never used.","'MenuBookIcon' is defined but never used.","'SearchIcon' is defined but never used.","'SvgIcon' is defined but never used.","'ViewListIcon' is defined but never used.",["266","267"],"'useState' is defined but never used.","'Tooltip' is defined but never used.","'ListItemIcon' is defined but never used.","'Drawer' is defined but never used.","'ToolbarWithAdjustedGutters' is assigned a value but never used.",["268","269"],["270","271"],"'model' is assigned a value but never used.","'propertiesModel' is assigned a value but never used.",["272","273"],"'key' is defined but never used.","'MasonMountPropertiesContent' is defined but never used.","'RomaluLukakuPropertiesPanel' is defined but never used.","'RomaluLukakuPropertiesContent' is defined but never used.",["274","275"],["276","277"],["278","279"],["280","281"],"'CardList' is defined but never used.",["282","283"],"'intl' is assigned a value but never used.","'name' is assigned a value but never used.","'readOnly' is assigned a value but never used.",["284","285"],["286","287"],["288","289"],["290","291"],["292","293"],["294","295"],["296","297"],["298","299"],["300","301"],["302","303"],["304","305"],"FunctionDeclaration",{"messageId":"306","fix":"307","desc":"308"},{"messageId":"309","fix":"310","desc":"311"},{"messageId":"306","fix":"312","desc":"308"},{"messageId":"309","fix":"313","desc":"311"},{"messageId":"306","fix":"314","desc":"308"},{"messageId":"309","fix":"315","desc":"311"},{"messageId":"306","fix":"316","desc":"308"},{"messageId":"309","fix":"317","desc":"311"},{"messageId":"306","fix":"318","desc":"308"},{"messageId":"309","fix":"319","desc":"311"},{"messageId":"306","fix":"320","desc":"308"},{"messageId":"309","fix":"321","desc":"311"},{"messageId":"306","fix":"322","desc":"308"},{"messageId":"309","fix":"323","desc":"311"},{"messageId":"306","fix":"324","desc":"308"},{"messageId":"309","fix":"325","desc":"311"},{"messageId":"306","fix":"326","desc":"308"},{"messageId":"309","fix":"327","desc":"311"},{"messageId":"306","fix":"328","desc":"308"},{"messageId":"309","fix":"329","desc":"311"},{"messageId":"306","fix":"330","desc":"308"},{"messageId":"309","fix":"331","desc":"311"},{"messageId":"306","fix":"332","desc":"308"},{"messageId":"309","fix":"333","desc":"311"},{"messageId":"306","fix":"334","desc":"308"},{"messageId":"309","fix":"335","desc":"311"},{"messageId":"306","fix":"336","desc":"308"},{"messageId":"309","fix":"337","desc":"311"},{"messageId":"306","fix":"338","desc":"308"},{"messageId":"309","fix":"339","desc":"311"},{"messageId":"306","fix":"340","desc":"308"},{"messageId":"309","fix":"341","desc":"311"},{"messageId":"306","fix":"342","desc":"308"},{"messageId":"309","fix":"343","desc":"311"},{"messageId":"306","fix":"344","desc":"308"},{"messageId":"309","fix":"345","desc":"311"},{"messageId":"306","fix":"346","desc":"308"},{"messageId":"309","fix":"347","desc":"311"},{"messageId":"306","fix":"348","desc":"308"},{"messageId":"309","fix":"349","desc":"311"},{"messageId":"306","fix":"350","desc":"308"},{"messageId":"309","fix":"351","desc":"311"},{"messageId":"306","fix":"352","desc":"308"},{"messageId":"309","fix":"353","desc":"311"},{"messageId":"306","fix":"354","desc":"308"},{"messageId":"309","fix":"355","desc":"311"},"suggestUnknown",{"range":"356","text":"357"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"356","text":"358"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"359","text":"357"},{"range":"359","text":"358"},{"range":"360","text":"357"},{"range":"360","text":"358"},{"range":"361","text":"357"},{"range":"361","text":"358"},{"range":"362","text":"357"},{"range":"362","text":"358"},{"range":"363","text":"357"},{"range":"363","text":"358"},{"range":"364","text":"357"},{"range":"364","text":"358"},{"range":"365","text":"357"},{"range":"365","text":"358"},{"range":"366","text":"357"},{"range":"366","text":"358"},{"range":"367","text":"357"},{"range":"367","text":"358"},{"range":"368","text":"357"},{"range":"368","text":"358"},{"range":"369","text":"357"},{"range":"369","text":"358"},{"range":"370","text":"357"},{"range":"370","text":"358"},{"range":"371","text":"357"},{"range":"371","text":"358"},{"range":"372","text":"357"},{"range":"372","text":"358"},{"range":"373","text":"357"},{"range":"373","text":"358"},{"range":"374","text":"357"},{"range":"374","text":"358"},{"range":"375","text":"357"},{"range":"375","text":"358"},{"range":"376","text":"357"},{"range":"376","text":"358"},{"range":"377","text":"357"},{"range":"377","text":"358"},{"range":"378","text":"357"},{"range":"378","text":"358"},{"range":"379","text":"357"},{"range":"379","text":"358"},{"range":"380","text":"357"},{"range":"380","text":"358"},[587,590],"unknown","never",[1644,1647],[570,573],[928,931],[2455,2458],[2527,2530],[3345,3348],[1767,1770],[1780,1783],[2332,2335],[261,264],[654,657],[60,63],[89,92],[161,164],[261,264],[1524,1527],[2070,2073],[654,657],[1540,1543],[2122,2125],[654,657],[348,351]]