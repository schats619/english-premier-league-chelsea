{"ast":null,"code":"var _jsxFileName = \"/Users/souravchatterjee/english-premier-league/src/components/navigation/Navigation.tsx\";\nimport { injectIntl } from \"react-intl\";\nimport React, { Component } from \"react\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Routes from \"../routes/Routes\";\nimport { ListItemText, MenuItem, MenuList } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 260;\n\nconst styles = theme => createStyles({\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    zIndex: 1000,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.shortest\n    }),\n    overflowX: \"hidden\",\n    overflowY: \"hidden\",\n    \"&:hover\": {\n      overflowY: \"auto\",\n      width: drawerWidth\n    },\n    \"&::-webkit-scrollbar\": {\n      display: \"none\"\n    }\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1\n  },\n  list: {\n    width: 260\n  }\n});\n\nclass Navigation extends Component {\n  getItems() {\n    const {\n      intl\n    } = this.props;\n    const items = [];\n    items.push([{\n      id: 1,\n      name: \"home\",\n      title: intl.formatMessage({\n        id: \"navigation.item.home\"\n      }),\n      link: \"/home\"\n    }, {\n      id: 2,\n      name: \"players\",\n      title: intl.formatMessage({\n        id: \"navigation.item.players\"\n      }),\n      link: \"/players\"\n    }]);\n    return items;\n  }\n\n  render() {\n    const {\n      classes,\n      open\n    } = this.props;\n    const items = this.getItems();\n    const depth = 0;\n\n    const activeRoute = routeName => {\n      return this.props.location.pathname === routeName ? true : false;\n    };\n\n    return /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      classes: {\n        paper: `${classes.drawerPaper} ${open ? null : classes.drawerPaperClose}`\n      },\n      anchor: \"left\",\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.list,\n        role: \"presentation\",\n        children: /*#__PURE__*/_jsxDEV(MenuList, {\n          children: Routes.map((prop, key) => {\n            return /*#__PURE__*/_jsxDEV(NavLink, {\n              to: prop.path,\n              style: {\n                textDecoration: \"none\"\n              },\n              children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                selected: activeRoute(prop.path),\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: prop.sidebarName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default injectIntl(withStyles(styles)(Navigation));","map":{"version":3,"sources":["/Users/souravchatterjee/english-premier-league/src/components/navigation/Navigation.tsx"],"names":["injectIntl","React","Component","createStyles","withStyles","Drawer","Routes","ListItemText","MenuItem","MenuList","NavLink","drawerWidth","styles","theme","drawerPaper","position","whiteSpace","width","zIndex","transition","transitions","create","easing","easeInOut","duration","shortest","overflowX","overflowY","display","drawerPaperClose","spacing","list","Navigation","getItems","intl","props","items","push","id","name","title","formatMessage","link","render","classes","open","depth","activeRoute","routeName","location","pathname","paper","map","prop","key","path","textDecoration","sidebarName"],"mappings":"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","sourcesContent":["import { IntlShape, injectIntl } from \"react-intl\";\nimport React, { Component } from \"react\";\nimport {\n  Theme,\n  WithStyles,\n  createStyles,\n  withStyles,\n} from \"@material-ui/core/styles\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport NavigationList from \"./NavigationList\";\nimport Routes from \"../routes/Routes\";\nimport { ListItemText, MenuItem, MenuList } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nconst drawerWidth = 260;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    drawerPaper: {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      zIndex: 1000,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.shortest,\n      }),\n      overflowX: \"hidden\",\n      overflowY: \"hidden\",\n      \"&:hover\": {\n        overflowY: \"auto\",\n        width: drawerWidth,\n      },\n      \"&::-webkit-scrollbar\": {\n        display: \"none\",\n      },\n    },\n    drawerPaperClose: {\n      overflowX: \"hidden\",\n      width: theme.spacing(7) + 1,\n    },\n    list: {\n      width: 260,\n    },\n  });\n\ninterface NavigationProps extends WithStyles<typeof styles> {\n  intl: IntlShape;\n  open: boolean;\n  location?: any;\n}\n\nclass Navigation extends Component<NavigationProps> {\n  getItems() {\n    const { intl } = this.props;\n    const items: Array<any> = [];\n\n    items.push([\n      {\n        id: 1,\n        name: \"home\",\n        title: intl.formatMessage({ id: \"navigation.item.home\" }),\n        link: \"/home\",\n      },\n      {\n        id: 2,\n        name: \"players\",\n        title: intl.formatMessage({ id: \"navigation.item.players\" }),\n        link: \"/players\",\n      },\n    ]);\n    return items;\n  }\n  render() {\n    const { classes, open } = this.props;\n    const items = this.getItems();\n    const depth = 0;\n\n    const activeRoute = (routeName: any) => {\n      return this.props.location.pathname === routeName ? true : false;\n    };\n    return (\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: `${classes.drawerPaper} ${\n            open ? null : classes.drawerPaperClose\n          }`,\n        }}\n        anchor=\"left\"\n        open={open}\n      >\n        <div className={classes.list} role=\"presentation\">\n          <MenuList>\n            {Routes.map((prop, key) => {\n              return (\n                <NavLink\n                  to={prop.path}\n                  style={{ textDecoration: \"none\" }}\n                  key={key}\n                >\n                  <MenuItem selected={activeRoute(prop.path)}>\n                    <ListItemText primary={prop.sidebarName} />\n                  </MenuItem>\n                </NavLink>\n              );\n            })}\n          </MenuList>\n        </div>\n      </Drawer>\n    );\n  }\n}\n\nexport default injectIntl(withStyles(styles)(Navigation));\n"]},"metadata":{},"sourceType":"module"}