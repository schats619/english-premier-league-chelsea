{"ast":null,"code":"var _jsxFileName = \"/Users/souravchatterjee/english-premier-league/src/components/navigation/NavigationItem.tsx\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Tooltip } from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport NavigationItemIcon from \"./NavigationItemIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass NavigationItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      item: this.props.item,\n      depth: this.props.depth\n    };\n  }\n\n  render() {\n    const {\n      location: {\n        pathname\n      }\n    } = this.props;\n    const {\n      open,\n      item,\n      depth\n    } = this.state;\n\n    if (item.items && item.items instanceof Array && item.items.length !== 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: () => this.handleClick(),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(NavigationItemIcon, {\n              name: item.name,\n              depth: depth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: item.title,\n            placement: \"bottom-start\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), open ? /*#__PURE__*/_jsxDEV(ExpandLess, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 38\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(NavigationList, {\n            items: item.items,\n            depth: depth + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else if (item.link) {\n      const nodeLink = item.objectTypeId ? item.link + \"/\" + item.objectTypeId : item.link;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          component: Link,\n          to: nodeLink,\n          selected: nodeLink === pathname,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(NavigationItemIcon, {\n              name: item.name,\n              depth: depth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: item.title,\n            placement: \"bottom-start\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primaryTypographyProps: {\n                noWrap: true\n              },\n              primary: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      return null;\n    }\n  }\n\n}\n\nexport default _c = withRouter(NavigationItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/souravchatterjee/english-premier-league/src/components/navigation/NavigationItem.tsx"],"names":["React","Component","Link","withRouter","Tooltip","ListItem","ListItemIcon","ListItemText","NavigationItemIcon","NavigationItem","constructor","props","state","open","item","depth","render","location","pathname","items","Array","length","handleClick","name","title","id","link","nodeLink","objectTypeId","noWrap"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { Tooltip } from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport NavigationItemIcon from \"./NavigationItemIcon\";\n\ninterface NavigationListItem {\n  id: number;\n  name: string;\n  title: string;\n  link?: string;\n  iconElement: JSX.Element;\n  styles: any;\n  items: Array<NavigationListItem>;\n  objectTypeId?: string;\n}\n\ninterface NavigationItemProps {\n  item: NavigationListItem;\n  depth: number;\n}\n\ntype NavigationItemState = {\n  open: boolean;\n  item: NavigationListItem;\n  depth: number;\n};\n\nclass NavigationItem extends Component<\n  NavigationItemProps & RouteComponentProps,\n  NavigationItemState\n> {\n  constructor(props: NavigationItemProps & RouteComponentProps) {\n    super(props);\n    this.state = {\n      open: false,\n      item: this.props.item,\n      depth: this.props.depth,\n    };\n  }\n  render() {\n    const {\n      location: { pathname },\n    } = this.props;\n    const { open, item, depth } = this.state;\n\n    if (item.items && item.items instanceof Array && item.items.length !== 0) {\n      return (\n        <>\n          <ListItem button key={item.id} onClick={() => this.handleClick()}>\n            <ListItemIcon>\n              <NavigationItemIcon name={item.name} depth={depth} />\n            </ListItemIcon>\n            <Tooltip title={item.title} placement=\"bottom-start\">\n              <ListItemText primary={item.title} />\n            </Tooltip>\n            {open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <NavigationList items={item.items} depth={depth + 1} />\n          </Collapse>\n        </>\n      );\n    } else if (item.link) {\n      const nodeLink = item.objectTypeId\n        ? item.link + \"/\" + item.objectTypeId\n        : item.link;\n      return (\n        <>\n          <ListItem\n            button\n            key={item.id}\n            component={Link}\n            to={nodeLink}\n            selected={nodeLink === pathname}\n          >\n            <ListItemIcon>\n              <NavigationItemIcon name={item.name} depth={depth} />\n            </ListItemIcon>\n            <Tooltip title={item.title} placement=\"bottom-start\">\n              <ListItemText\n                primaryTypographyProps={{ noWrap: true }}\n                primary={item.title}\n              />\n            </Tooltip>\n          </ListItem>\n        </>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withRouter(NavigationItem);\n"]},"metadata":{},"sourceType":"module"}