{"ast":null,"code":"var _jsxFileName = \"/Users/souravchatterjee/english-premier-league/src/components/menu/Taskbar.tsx\";\nimport React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport { AppBar, IconButton, Toolbar, Tooltip } from \"@material-ui/core\";\nimport { deepOrange } from \"@material-ui/core/colors\";\nimport { Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => createStyles({\n  root: {\n    width: \"100%\"\n  },\n  appbar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"100%\"\n    }\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  eplAvatar: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500]\n  }\n});\n\nclass Taskbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = void 0;\n    this.state = {\n      check: true,\n      onClick: false\n    };\n  }\n\n  render() {\n    const {\n      onEPLIconClick,\n      classes,\n      intl\n    } = this.props;\n    const {\n      check\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      className: classes.appbar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: onEPLIconClick,\n          color: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: intl.formatMessage({\n              id: \"epl.avatar.name\"\n            }),\n            placement: \"bottom-start\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.title,\n              children: intl.formatMessage({\n                id: \"epl.avatar.name\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default injectIntl(withStyles(styles)(Taskbar));","map":{"version":3,"sources":["/Users/souravchatterjee/english-premier-league/src/components/menu/Taskbar.tsx"],"names":["React","Component","injectIntl","withStyles","createStyles","AppBar","IconButton","Toolbar","Tooltip","deepOrange","Typography","styles","theme","root","width","appbar","breakpoints","up","title","display","eplAvatar","color","palette","getContrastText","backgroundColor","Taskbar","constructor","props","state","check","onClick","render","onEPLIconClick","classes","intl","formatMessage","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAoBC,UAApB,QAAsC,YAAtC;AACA,SAEEC,UAFF,EAIEC,YAJF,QAKO,0BALP;AAMA,SACEC,MADF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,OALF,QAMO,mBANP;AAOA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IACbR,YAAY,CAAC;AACXS,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADK;AAIXC,EAAAA,MAAM,EAAE;AACN,KAACH,KAAK,CAACI,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BH,MAAAA,KAAK,EAAE;AADqB;AADxB,GAJG;AASXI,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAEL,KAACP,KAAK,CAACI,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BE,MAAAA,OAAO,EAAE;AADmB;AAFzB,GATI;AAeXC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAET,KAAK,CAACU,OAAN,CAAcC,eAAd,CAA8Bd,UAAU,CAAC,GAAD,CAAxC,CADE;AAETe,IAAAA,eAAe,EAAEf,UAAU,CAAC,GAAD;AAFlB;AAfA,CAAD,CADd;;AAgCA,MAAMgB,OAAN,SAAsBxB,SAAtB,CAA4D;AAE1DyB,EAAAA,WAAW,CAACC,KAAD,EAAsB;AAC/B,UAAMA,KAAN;AAD+B,SADjCC,KACiC;AAE/B,SAAKA,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA,OAAlB;AAA2BC,MAAAA;AAA3B,QAAoC,KAAKP,KAA/C;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,wBACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAA0B,MAAA,SAAS,EAAEK,OAAO,CAAClB,MAA7C;AAAA,6BACE,QAAC,OAAD;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAEiB,cAArB;AAAqC,UAAA,KAAK,EAAC,SAA3C;AAAA,iCACE,QAAC,OAAD;AACE,YAAA,KAAK,EAAEE,IAAI,CAACC,aAAL,CAAmB;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAAnB,CADT;AAEE,YAAA,SAAS,EAAC,cAFZ;AAAA,mCAIE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,SAAS,EAAEH,OAAO,CAACf,KAA5C;AAAA,wBACGgB,IAAI,CAACC,aAAL,CAAmB;AAAEC,gBAAAA,EAAE,EAAE;AAAN,eAAnB;AADH;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AA9ByD;;AAiC5D,eAAelC,UAAU,CAACC,UAAU,CAACQ,MAAD,CAAV,CAAmBc,OAAnB,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { IntlShape, injectIntl } from \"react-intl\";\nimport {\n  Theme,\n  withStyles,\n  WithStyles,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Avatar,\n  IconButton,\n  Toolbar,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { deepOrange } from \"@material-ui/core/colors\";\nimport { Typography } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    appbar: {\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"100%\",\n      },\n    },\n    title: {\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\",\n      },\n    },\n    eplAvatar: {\n      color: theme.palette.getContrastText(deepOrange[500]),\n      backgroundColor: deepOrange[500],\n    },\n  });\n\ninterface TaskbarProps extends WithStyles<typeof styles> {\n  intl: IntlShape;\n  onEPLIconClick: () => void;\n}\n\ntype TaskbarState = {\n  check: boolean;\n  onClick: boolean;\n};\n\nclass Taskbar extends Component<TaskbarProps, TaskbarState> {\n  state: TaskbarState;\n  constructor(props: TaskbarProps) {\n    super(props);\n    this.state = {\n      check: true,\n      onClick: false,\n    };\n  }\n\n  render() {\n    const { onEPLIconClick, classes, intl } = this.props;\n    const { check } = this.state;\n\n    return (\n      <AppBar position=\"static\" className={classes.appbar}>\n        <Toolbar>\n          <IconButton onClick={onEPLIconClick} color=\"inherit\">\n            <Tooltip\n              title={intl.formatMessage({ id: \"epl.avatar.name\" })}\n              placement=\"bottom-start\"\n            >\n              <Typography variant=\"h5\" className={classes.title}>\n                {intl.formatMessage({ id: \"epl.avatar.name\" })}\n              </Typography>\n            </Tooltip>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default injectIntl(withStyles(styles)(Taskbar));\n"]},"metadata":{},"sourceType":"module"}