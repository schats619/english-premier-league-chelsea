{"ast":null,"code":"var _jsxFileName = \"/Users/souravchatterjee/english-premier-league/src/components/navigation/Navigation.tsx\";\nimport { injectIntl } from \"react-intl\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Routes from \"../routes/Routes\";\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport NavigationItemIcon from \"./NavigationItemIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 260;\n\nconst styles = theme => createStyles({\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    zIndex: 1000,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.shortest\n    }),\n    overflowX: \"hidden\",\n    overflowY: \"hidden\",\n    \"&:hover\": {\n      overflowY: \"auto\",\n      width: drawerWidth\n    },\n    \"&::-webkit-scrollbar\": {\n      display: \"none\"\n    }\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1\n  },\n  list: {\n    width: 260\n  }\n});\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      item: this.props.item,\n      depth: this.props.depth\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      open\n    } = this.props;\n    const {\n      item\n    } = this.state;\n    const depth = 0; // const activeRoute = (routeName: any) => {\n    //   return this.props.location.pathname === routeName ? true : false;\n    // };\n\n    return /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      classes: {\n        paper: `${classes.drawerPaper} ${open ? null : classes.drawerPaperClose}`\n      },\n      anchor: \"left\",\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.list,\n        role: \"presentation\",\n        children: Routes.map((prop, key) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              to: prop.path,\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(NavigationItemIcon, {\n                  name: item.name,\n                  depth: depth\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: prop.sidebarName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default injectIntl(withRouter(withStyles(styles)(Navigation)));","map":{"version":3,"sources":["/Users/souravchatterjee/english-premier-league/src/components/navigation/Navigation.tsx"],"names":["injectIntl","React","Component","withRouter","createStyles","withStyles","Drawer","Routes","ListItem","ListItemIcon","ListItemText","NavigationItemIcon","drawerWidth","styles","theme","drawerPaper","position","whiteSpace","width","zIndex","transition","transitions","create","easing","easeInOut","duration","shortest","overflowX","overflowY","display","drawerPaperClose","spacing","list","Navigation","constructor","props","state","open","item","depth","render","classes","paper","map","prop","key","path","name","sidebarName"],"mappings":"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","sourcesContent":["import { IntlShape, injectIntl } from \"react-intl\";\nimport React, { Component } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\n\nimport {\n  Theme,\n  WithStyles,\n  createStyles,\n  withStyles,\n} from \"@material-ui/core/styles\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport NavigationList from \"./NavigationList\";\nimport Routes from \"../routes/Routes\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  MenuList,\n} from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport NavigationItemIcon from \"./NavigationItemIcon\";\n\nconst drawerWidth = 260;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    drawerPaper: {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      zIndex: 1000,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.shortest,\n      }),\n      overflowX: \"hidden\",\n      overflowY: \"hidden\",\n      \"&:hover\": {\n        overflowY: \"auto\",\n        width: drawerWidth,\n      },\n      \"&::-webkit-scrollbar\": {\n        display: \"none\",\n      },\n    },\n    drawerPaperClose: {\n      overflowX: \"hidden\",\n      width: theme.spacing(7) + 1,\n    },\n    list: {\n      width: 260,\n    },\n  });\n\ninterface Navigation {\n  items: Array<Navigation>;\n}\ntype NavigationState = {\n  item: Navigation;\n};\ninterface NavigationProps extends WithStyles<typeof styles> {\n  intl: IntlShape;\n  open: boolean;\n}\n\nclass Navigation extends Component<\n  NavigationProps & NavigationState & RouteComponentProps\n> {\n  constructor(props: NavigationProps & RouteComponentProps) {\n    super(props);\n    this.state = {\n      open: false,\n      item: this.props.item,\n      depth: this.props.depth,\n    };\n  }\n  render() {\n    const { classes, open } = this.props;\n    const { item } = this.state;\n    const depth = 0;\n\n    // const activeRoute = (routeName: any) => {\n    //   return this.props.location.pathname === routeName ? true : false;\n    // };\n    return (\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: `${classes.drawerPaper} ${\n            open ? null : classes.drawerPaperClose\n          }`,\n        }}\n        anchor=\"left\"\n        open={open}\n      >\n        <div className={classes.list} role=\"presentation\">\n          {Routes.map((prop, key) => {\n            return (\n              <>\n                <ListItem button to={prop.path} key={key}>\n                  <ListItemIcon>\n                    <NavigationItemIcon name={item.name} depth={depth} />\n                  </ListItemIcon>\n                  <ListItemText primary={prop.sidebarName} />\n                </ListItem>\n              </>\n            );\n          })}\n        </div>\n      </Drawer>\n    );\n  }\n}\n\nexport default injectIntl(withRouter(withStyles(styles)(Navigation)));\n"]},"metadata":{},"sourceType":"module"}