{"ast":null,"code":"var _jsxFileName = \"/Users/souravchatterjee/english-premier-league/src/components/menu/Taskbar.tsx\";\nimport React, { Component } from 'react';\nimport { injectIntl } from 'react-intl';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => createStyles({\n  root: {\n    width: '100%'\n  },\n  appbar: {\n    [theme.breakpoints.up('sm')]: {\n      width: '100%'\n    }\n  }\n});\n\nclass Taskbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = void 0;\n    this.state = {\n      check: true\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      intl\n    } = this.props;\n    const {\n      check\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      className: classes.appbar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default injectIntl(withStyles(styles)(Taskbar));","map":{"version":3,"sources":["/Users/souravchatterjee/english-premier-league/src/components/menu/Taskbar.tsx"],"names":["React","Component","injectIntl","withStyles","createStyles","AppBar","Toolbar","styles","theme","root","width","appbar","breakpoints","up","Taskbar","constructor","props","state","check","render","classes","intl"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAmBC,UAAnB,QAAoC,YAApC;AACA,SAAeC,UAAf,EAAuCC,YAAvC,QAA0D,0BAA1D;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,mBAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IACfJ,YAAY,CAAC;AACTK,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL,GADG;AAITC,EAAAA,MAAM,EAAE;AAEA,KAACH,KAAK,CAACI,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GACJ;AACIH,MAAAA,KAAK,EAAE;AADX;AAHI;AAJC,CAAD,CADZ;;AAuBA,MAAMI,OAAN,SAAsBb,SAAtB,CAA4D;AAExDc,EAAAA,WAAW,CAACC,KAAD,EAAsB;AAC/B,UAAMA,KAAN;AAD+B,SADjCC,KACiC;AAE/B,SAAKA,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV,QAAkB,KAAKL,KAA7B;AACA,UAAM;AAACE,MAAAA;AAAD,QAAU,KAAKD,KAArB;AAEA,wBACC,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAG,QAAnB;AAA4B,MAAA,SAAS,EAAGG,OAAO,CAACT,MAAhD;AAAA,6BACG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADD;AAaH;;AA1BuD;;AA6B5D,eAAeT,UAAU,CAACC,UAAU,CAACI,MAAD,CAAV,CAAmBO,OAAnB,CAAD,CAAzB","sourcesContent":["import React, {Component} from 'react';\nimport {IntlShape, injectIntl} from 'react-intl';\nimport {Theme, withStyles, WithStyles, createStyles} from '@material-ui/core/styles';\nimport { AppBar, Toolbar } from '@material-ui/core';\n\nconst styles = (theme: Theme) =>\ncreateStyles({\n    root: {\n        width: '100%',\n    },\n    appbar: {\n        \n            [theme.breakpoints.up('sm')]:\n        {\n            width: '100%'\n        }\n    }\n}); \n\ninterface TaskbarProps extends WithStyles<typeof styles> {\n    intl: IntlShape;\n}\n\ntype TaskbarState = {\n    check: boolean;\n}\n\n\nclass Taskbar extends Component<TaskbarProps, TaskbarState> {\n    state: TaskbarState;\n    constructor(props: TaskbarProps) {\n      super(props);\n      this.state = {\n          check: true\n      }\n    };\n\n    render() {\n        const {classes, intl} = this.props;\n        const {check} = this.state;\n\n        return (\n         <AppBar position = \"static\" className= {classes.appbar}>\n            <Toolbar>\n\n\n                </Toolbar>\n\n\n         </AppBar>\n            \n\n        );\n\n    }\n}\n\nexport default injectIntl(withStyles(styles)(Taskbar));"]},"metadata":{},"sourceType":"module"}