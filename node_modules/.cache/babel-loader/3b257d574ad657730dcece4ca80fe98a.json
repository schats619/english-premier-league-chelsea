{"ast":null,"code":"var _jsxFileName = \"/Users/souravchatterjee/english-premier-league/src/components/navigation/Navigation.tsx\";\nimport { injectIntl } from \"react-intl\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Routes from \"../routes/Routes\";\nimport { ListItem, ListItemText } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 260;\n\nconst styles = theme => createStyles({\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    zIndex: 1000,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.shortest\n    }),\n    overflowX: \"hidden\",\n    overflowY: \"hidden\",\n    \"&:hover\": {\n      overflowY: \"auto\",\n      width: drawerWidth\n    },\n    \"&::-webkit-scrollbar\": {\n      display: \"none\"\n    }\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1\n  },\n  list: {\n    width: 260\n  }\n});\n\nclass Navigation extends Component {\n  onHandleDrawerClose() {\n    this.props.onPropertiesOpenStatusChange();\n  }\n\n  render() {\n    const {\n      classes,\n      open\n    } = this.props;\n    const depth = 0;\n\n    const activeRoute = routeName => {\n      return this.props.location.pathname === routeName ? true : false;\n    };\n\n    return /*#__PURE__*/_jsxDEV(Drawer, {\n      classes: {\n        paper: `${classes.drawerPaper} ${open ? null : classes.drawerPaperClose}`\n      },\n      anchor: \"left\",\n      open: open,\n      onClose: this.onHandleDrawerClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.list,\n        role: \"presentation\",\n        children: Routes.map((prop, key) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              component: Link,\n              selected: activeRoute(prop.path),\n              to: prop.path,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: prop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default injectIntl(withRouter(withStyles(styles)(Navigation)));","map":{"version":3,"sources":["/Users/souravchatterjee/english-premier-league/src/components/navigation/Navigation.tsx"],"names":["injectIntl","React","Component","Link","withRouter","createStyles","withStyles","Drawer","Routes","ListItem","ListItemText","drawerWidth","styles","theme","drawerPaper","position","whiteSpace","width","zIndex","transition","transitions","create","easing","easeInOut","duration","shortest","overflowX","overflowY","display","drawerPaperClose","spacing","list","Navigation","onHandleDrawerClose","props","onPropertiesOpenStatusChange","render","classes","open","depth","activeRoute","routeName","location","pathname","paper","map","prop","key","path","name"],"mappings":"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","sourcesContent":["import { IntlShape, injectIntl } from \"react-intl\";\nimport React, { Component } from \"react\";\nimport { RouteComponentProps, Link, withRouter } from \"react-router-dom\";\n\nimport {\n  Theme,\n  WithStyles,\n  createStyles,\n  withStyles,\n} from \"@material-ui/core/styles\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport NavigationList from \"./NavigationList\";\nimport Routes from \"../routes/Routes\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  MenuList,\n} from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport NavigationItemIcon from \"./NavigationItemIcon\";\n\nconst drawerWidth = 260;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    drawerPaper: {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      zIndex: 1000,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.shortest,\n      }),\n      overflowX: \"hidden\",\n      overflowY: \"hidden\",\n      \"&:hover\": {\n        overflowY: \"auto\",\n        width: drawerWidth,\n      },\n      \"&::-webkit-scrollbar\": {\n        display: \"none\",\n      },\n    },\n    drawerPaperClose: {\n      overflowX: \"hidden\",\n      width: theme.spacing(7) + 1,\n    },\n    list: {\n      width: 260,\n    },\n  });\n\ninterface NavigationProps extends WithStyles<typeof styles> {\n  intl: IntlShape;\n  open: boolean;\n  onPropertiesOpenStatusChange: () => void;\n}\n\n\nclass Navigation extends Component<NavigationProps & RouteComponentProps> {\n  onHandleDrawerClose() {\n    this.props.onPropertiesOpenStatusChange();\n  }\n\n  render() {\n    const { classes, open } = this.props;\n    const depth = 0;\n\n    const activeRoute = (routeName: any) => {\n      return this.props.location.pathname === routeName ? true : false;\n    };\n    return (\n      <Drawer\n        classes={{\n          paper: `${classes.drawerPaper} ${\n            open ? null : classes.drawerPaperClose\n          }`,\n        }}\n        anchor=\"left\"\n        open={open}\n        onClose={this.onHandleDrawerClose}\n      >\n        <div className={classes.list} role=\"presentation\">\n          {Routes.map((prop, key) => {\n            return (\n              <>\n                <ListItem\n                  button\n                  component={Link}\n                  selected={activeRoute(prop.path)}\n                  to={prop.path}\n                  key={key}\n                >\n                  <ListItemText primary={prop.name} />\n                </ListItem>\n              </>\n            );\n          })}\n        </div>\n      </Drawer>\n    );\n  }\n}\n\nexport default injectIntl(withRouter(withStyles(styles)(Navigation)));\n"]},"metadata":{},"sourceType":"module"}