{"ast":null,"code":"var _jsxFileName = \"/Users/souravchatterjee/english-premier-league/src/components/navigation/NavigationList.tsx\";\nimport React, { Component } from \"react\";\nimport { AbilityContext } from \"../../context/abilityContext\";\nimport { List } from \"@material-ui/core\";\nimport NavigationItem from \"./NavigationItem\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NavigationList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.isPermittedToView = (abilityItems, contextValue) => {\n      return _.some(abilityItems, abilityItem => {\n        return contextValue.can(abilityItem.actionName, abilityItem.abilityName);\n      });\n    };\n  }\n\n  render() {\n    const {\n      items,\n      depth\n    } = this.props;\n    const thisRef = this;\n    const contextValue = this.context;\n    return /*#__PURE__*/_jsxDEV(List, {\n      component: \"div\",\n      disablePadding: true,\n      children: items.map((subItem, index) => {\n        const abilities = subItem.abilities;\n\n        if (!abilities || _.isEmpty(abilities) || thisRef.isPermittedToView(abilities, contextValue)) {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(NavigationItem, {\n              item: subItem,\n              depth: depth + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, `${subItem.title}${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this);\n        }\n\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nNavigationList.contextType = AbilityContext;\nexport default NavigationList;","map":{"version":3,"sources":["/Users/souravchatterjee/english-premier-league/src/components/navigation/NavigationList.tsx"],"names":["React","Component","AbilityContext","List","NavigationItem","_","NavigationList","isPermittedToView","abilityItems","contextValue","some","abilityItem","can","actionName","abilityName","render","items","depth","props","thisRef","context","map","subItem","index","abilities","isEmpty","title","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAUA,MAAMC,cAAN,SAA6BL,SAA7B,CAGE;AAAA;AAAA;;AAAA,SAGAM,iBAHA,GAGoB,CAClBC,YADkB,EAGlBC,YAHkB,KAIN;AACZ,aAAOJ,CAAC,CAACK,IAAF,CAAOF,YAAP,EAAsBG,WAAD,IAAiB;AAC3C,eAAOF,YAAY,CAACG,GAAb,CAAiBD,WAAW,CAACE,UAA7B,EAAyCF,WAAW,CAACG,WAArD,CAAP;AACD,OAFM,CAAP;AAGD,KAXD;AAAA;;AAaAC,EAAAA,MAAM,GAAgB;AACpB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,KAAKC,KAA9B;AAEA,UAAMC,OAAO,GAAG,IAAhB;AACA,UAAMV,YAAY,GAAG,KAAKW,OAA1B;AAEA,wBACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAsB,MAAA,cAAc,MAApC;AAAA,gBACGJ,KAAK,CAACK,GAAN,CAAU,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC7B,cAAMC,SAAS,GAAGF,OAAO,CAACE,SAA1B;;AACA,YACE,CAACA,SAAD,IACAnB,CAAC,CAACoB,OAAF,CAAUD,SAAV,CADA,IAEAL,OAAO,CAACZ,iBAAR,CAA0BiB,SAA1B,EAAqCf,YAArC,CAHF,EAIE;AACA,8BACE,QAAC,KAAD,CAAO,QAAP;AAAA,mCACE,QAAC,cAAD;AAAgB,cAAA,IAAI,EAAEa,OAAtB;AAA+B,cAAA,KAAK,EAAEL,KAAK,GAAG;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF,aAAsB,GAAEK,OAAO,CAACI,KAAM,GAAEH,KAAM,EAA9C;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;;AACD,eAAO,IAAP;AACD,OAdA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAtCD;;AAHIjB,c,CAIGqB,W,GAAczB,c;AAwCvB,eAAeI,cAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { AbilityContext } from \"../../context/abilityContext\";\nimport { List } from \"@material-ui/core\";\nimport NavigationItem from \"./NavigationItem\";\nimport _ from \"lodash\";\n\ninterface NavigationListProps {\n  items: Array<any>;\n  depth: number;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface NavigationListState {}\n\nclass NavigationList extends Component<\n  NavigationListProps,\n  NavigationListState\n> {\n  static contextType = AbilityContext;\n\n  isPermittedToView = (\n    abilityItems: Array<any>,\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    contextValue: any\n  ): boolean => {\n    return _.some(abilityItems, (abilityItem) => {\n      return contextValue.can(abilityItem.actionName, abilityItem.abilityName);\n    });\n  };\n\n  render(): JSX.Element {\n    const { items, depth } = this.props;\n\n    const thisRef = this;\n    const contextValue = this.context;\n\n    return (\n      <List component=\"div\" disablePadding>\n        {items.map((subItem, index) => {\n          const abilities = subItem.abilities;\n          if (\n            !abilities ||\n            _.isEmpty(abilities) ||\n            thisRef.isPermittedToView(abilities, contextValue)\n          ) {\n            return (\n              <React.Fragment key={`${subItem.title}${index}`}>\n                <NavigationItem item={subItem} depth={depth + 1} />\n              </React.Fragment>\n            );\n          }\n          return null;\n        })}\n      </List>\n    );\n  }\n}\n\nexport default NavigationList;\n"]},"metadata":{},"sourceType":"module"}